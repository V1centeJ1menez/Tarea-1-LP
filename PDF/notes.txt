··············· GRAMATICA ··············· 

EBNF General
 
··············· ABSTRACT ··············· 

- COMPROBACION SINTACTICA
- Escribir expresiones regulares que definen el ebnf General
- Hacer modificaciones si es necesario para condicionales,
  solo verificacion sintactica
- Identificar lineas generales

- COMPROBACION SEMANTICA
- Tokenizar cada linea que hace full match
- Comprobar el tipo de datos que aguanta cada tipo de linea
- Validar para las condicionales que no se pasen de tres anidaciones
  dentro del if.

- COMENTARIOS DE funciones

’’’
***
Parametro 1 : Tipo
Parametro 2 : Tipo
...
***
Tipo de Retorno o None
***
Breve descripcion de la funcion y el retorno
’’’

··············· CONSIDERACIONES ··············· 

CONSIDERACIONES DE SINTAXIS

- Se destaca que la cantidad de espacio entre palabras es indeterminada.
- No van a ver lineas vacias.
- Cada linea de codigo debe terminar con un salto de linea.
- La identacion no afecta la ejecucin del programa.
- Las operaciones pueden hacerse solo una a la vez y tienen una variable 
  de destinto y uno o dos operandos.
- Todas las funciones deben ir comentadas con el siguiente formato:
- DEFINE va acompañado siempre de una variable
- Condicional, La cantidad de condicionales anidadas es hasta 3 veces.
- En general, se realiza una instrucción a la vez

- Las condicionales del lenguaje está dado por la palabra if y else escrito de la siguiente forma:

if(condicion){
  linea
} else {
  linea
}

puede haber o no codigo dentro, pero la estructura va si o si
if true:
    if true:
        #1
        if true:
            #2
            if true:
                #3
                if true: #Quiebre


- Mal Sintaxis: La linea (N) no está bien escrita.
CONSIDERACIONES DE SEMANTICA

- DEFINE soporta una variable(identificador de  tipo int, bool y string)

- ASIG soporta identificadores de  tipo int, bool y string. Y directamente datos int, bool y string

- La suma +, soporta identificadores de tipo int y string. Y directamente datos int y string. 
  Concatena string-string, string-int(int-string) y Genera un string o un int

- La multiplizacion *, soporta identificadores de tipo int y directamente datos ints. Genera un int

- Mayor que > soporta identificadores de tipo int. Y directamente datos ints. genera un booleano

- Igual que == soporta identificadores de tipo ints y string. y directamente datos int y strin. Genera un booleano
                
- La condicion de un if-else esta dada por una variable que debe contener True o False o directamente un dato tipo bool.

MOSTRAR(variable) , en la que escribe el contenido de la variable, seguido por un salto de linea, en un archivo de texto output.txt, 


 
··············· ERRORES ··············· 

- Variable No Definida: La variable de nombre (nombre) no ha sido definida o no se le ha asignad valor en la línea (N).
- Tipo Incompatible: La operación DP o condicional en la línea (N) es incompatible al tipo de dato.
- Variable Ya Definida: La variable de nombre (nombre) ya se encuentra definida.
